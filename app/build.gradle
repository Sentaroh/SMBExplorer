apply plugin: 'com.android.application'

android {
//    compileSdkVersion 'android-R'
    compileSdkVersion 30
    buildToolsVersion "30.0.0"//"29.0.3"

    defaultConfig {
        applicationId "com.sentaroh.android.SMBExplorer"
        minSdkVersion 21
//        targetSdkVersion 'R'
        targetSdkVersion 30

        versionCode 1
        versionName "1.01"

    }

    lintOptions {
        disable 'MissingTranslation'
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            applicationVariants.all { variant ->
                if (variant.buildType.name.equals("debug")) {
                    variant.outputs.all {
                        def versionName = variant.versionName
                        def versionNumber = variant.versionCode.toString()
                        def mod_name = "${rootProject.name}"
                        def fileExtension= outputFileName.toString().substring(outputFileName.toString().lastIndexOf(".")+1)
                        def newName = "${mod_name}_debug.${fileExtension}"
//                        outputFileName = "../../../../../release/"+newName
                        outputFileName = newName

                        task copyDebugApk(type: Copy) {
                            from 'build/outputs/apk/debug'
                            into '../debug_apk/' // Into the project root, one level above the app folder
                            include '**/*debug.apk'
                        }

                        afterEvaluate {
                            packageDebug.finalizedBy(copyDebugApk)
                        }

                    }
                }
            }

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            applicationVariants.all { variant ->
                if (variant.buildType.name.equals("release")) {
                    variant.outputs.all {
                        def versionName = variant.versionName
                        def versionNumber = variant.versionCode.toString()
                        def mod_name = "${rootProject.name}"
                        def fileExtension= outputFileName.toString().substring(outputFileName.toString().lastIndexOf(".")+1)
                        def newName = "${mod_name}_${versionName}_${versionNumber}_release.${fileExtension}"
                        outputFileName = newName
                    }
                }
            }

        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'

    implementation files('libs/jcifs-ng-2.1.0-mod-08.jar')
    implementation files('libs/jcifs-ng-2.1.1-20190202-03.jar')
    implementation files('libs/jcifs-ng-2.1.3-20190427-05.jar')
    implementation files('libs/jcifs-ng-2.1.4-20200413-03.jar')
    implementation files('libs/jcifs-1.3.17_patch.jar')
    implementation files('libs/JcifsFile-1.0.8.jar')
    implementation files('libs/bcprov-jdk15to18-1.66.jar')
//    implementation files('libs/bcprov-jdk15on-158.jar')

    implementation files('libs/Utilities3-1.0.2.aar')

    implementation 'androidx.activity:activity:1.2.0-alpha02'
    implementation "androidx.fragment:fragment-ktx:1.3.0-alpha04"
    implementation "androidx.core:core-ktx:+"

}
